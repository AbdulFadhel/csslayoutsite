# English

global.title: "Learn CSS Layout"
global.short_title: "CSS"
global.home: "Home"
global.toc: "Table of Contents"
global.next: "Next"
global.previous: "Previous"
global.feedback: "Issues / Feedback"

util.extra_credit: "extra credit"

index.1: "This site teaches the CSS fundamentals that are used in any CSS layout."
index.2: "I assume you already know how to make things colorful. You know what selectors, properties, and values are. And you probably know a thing or two about layout, though it may still be a rage-provoking activity for you. Let's see if we can save you some fury on your next project."
index.get_started: "Get Started"

no_layout.title: "no layout"
no_layout.1: "Having no layout whatsover is almost ok if all you want is one big column of content. However, if a user makes the browser window really wide, it gets kind of annoying to read: after each line your eyes have a long distance to travel right-to-left to the next line. Try resizing your browser to see what I mean!"
no_layout.2: "Before we fix this problem, let's make sure we're clear on the very important <code>display</code> property."

display.title: "the \"display\" property"
display.intro: "<code>display</code> is CSS's most important property for controlling layout. Every element has a default display value depending on what type of element it is. The default for most elements is usually <code>block</code> or <code>inline</code>. A block element is often called a block-level element. An inline element is always just called an inline element."
display.block.title: "block"
display.block: "<code>div</code> is the standard block-level element. A block-level element starts on a new line and stretches out to the left and right as far as it can. Other common block-level elements are <code>p</code> and <code>form</code>, and new in HTML5 are <code>header</code>, <code>footer</code>, <code>section</code>, and more."
display.inline.title: "inline"
display.inline.1: "<code>span</code> is the standard inline element. An inline element can wrap some text inside a paragraph"
display.inline.2: "like this"
display.inline.3: "without disrupting the flow of that paragraph. The <code>a</code> element is the most common inline element, since you use them for links."
display.none.title: "none"
display.none.1: "Another common display value is <code>none</code>. Some specialized elements such as <code>script</code> use this as their default. It is commonly used with JavaScript to hide and show elements without really deleting and recreating them."
display.none.2: "This is different from <code>visibility</code>. Setting <code>display</code>  to <code>none</code> will not leave space where the element would have been, but <code>visibility: hidden;</code> will leave an empty space."
display.other.title: "other display values"
display.other: "There are plenty of more exotic display values, such as <code>list-item</code> and <code>table</code>. <a href=\"https://developer.mozilla.org/en-US/docs/CSS/display\">Here is an exhaustive list</a>. We'll discuss <code>inline-block</code> and <code>flex</code> later on."
display.extra: "As I mentioned, every element has a default display type. However, you can <em>always</em> override this! Though it wouldn't make sense to make an inline div, you can use this to customize the display of elements that have particular semantics. A common example is making inline <code>li</code> elements for horizontal menus."

